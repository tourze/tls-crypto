<?php

// RFC 3526 从 Section 4 直接复制的 3072 位素数
$rfc3526_3072_prime

// 从 DHE.php 复制的 3072 位素数
$php_3072_prime

echo "RFC素数长度: " . strlen($rfc3526_3072_prime) . "\n";
echo "PHP素数长度: " . strlen($php_3072_prime) . "\n";

echo "RFC素数长度是否为偶数: " . (strlen($rfc3526_3072_prime) % 2 === 0 ? "是" : "否") . "\n";
echo "PHP素数长度是否为偶数: " . (strlen($php_3072_prime) % 2 === 0 ? "是" : "否") . "\n";

// 尝试 hex2bin 操作
$rfc_binary = @hex2bin($rfc3526_3072_prime);
$php_binary = @hex2bin($php_3072_prime);

echo "RFC素数 hex2bin 是否成功: " . ($rfc_binary !== false ? "是" : "否") . "\n";
echo "PHP素数 hex2bin 是否成功: " . ($php_binary !== false ? "是" : "否") . "\n";

// 检查字符是否相同
$identical = true;
$first_diff_pos = -1;
for ($i = 0; $i < min(strlen($rfc3526_3072_prime), strlen($php_3072_prime)); $i++) {
    if ($rfc3526_3072_prime[$i] !== $php_3072_prime[$i]) {
        $identical = false;
        $first_diff_pos = $i;
        break;
    }
}

echo "两个字符串是否完全相同: " . ($identical ? "是" : "否") . "\n";
if (!$identical) {
    echo "第一个不同的位置: " . $first_diff_pos . "\n";
    echo "RFC字符: '" . $rfc3526_3072_prime[$first_diff_pos] . "' (ASCII: " . ord($rfc3526_3072_prime[$first_diff_pos]) . ")\n";
    echo "PHP字符: '" . $php_3072_prime[$first_diff_pos] . "' (ASCII: " . ord($php_3072_prime[$first_diff_pos]) . ")\n";
    
    // 显示周围10个字符作为上下文
    $context_start = max(0, $first_diff_pos - 5);
    $context_end = min(strlen($rfc3526_3072_prime), $first_diff_pos + 5);
    
    echo "RFC上下文: '" . substr($rfc3526_3072_prime, $context_start, $context_end - $context_start + 1) . "'\n";
    echo "PHP上下文: '" . substr($php_3072_prime, $context_start, $context_end - $context_start + 1) . "'\n";
}

// 清理后尝试
$clean_rfc = preg_replace('/[^0-9a-fA-F]/', '', $rfc3526_3072_prime);
$clean_php = preg_replace('/[^0-9a-fA-F]/', '', $php_3072_prime);

echo "\n清理后结果:\n";
echo "清理后RFC素数长度: " . strlen($clean_rfc) . "\n";
echo "清理后PHP素数长度: " . strlen($clean_php) . "\n";

echo "清理后RFC素数长度是否为偶数: " . (strlen($clean_rfc) % 2 === 0 ? "是" : "否") . "\n";
echo "清理后PHP素数长度是否为偶数: " . (strlen($clean_php) % 2 === 0 ? "是" : "否") . "\n";

// 逐个字符检查，显示不是十六进制的字符
echo "\n检查PHP素数中的非十六进制字符:\n";
for ($i = 0; $i < strlen($php_3072_prime); $i++) {
    $char = $php_3072_prime[$i];
    if (!ctype_xdigit($char)) {
        echo "位置 $i: 非十六进制字符 '$char' (ASCII: " . ord($char) . ")\n";
    }
}

// 找出最佳解决方案
echo "\n解决方案测试:\n";

// 1. 直接截取RFC中的素数
$solution1 = $rfc3526_3072_prime;
$solution1_bin = @hex2bin($solution1);
echo "解决方案1 (使用RFC字符串): " . (($solution1_bin !== false) ? "有效" : "无效") . "\n";

// 2. 使用直接硬编码的string方式
$solution2 = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8887464EDA5FBD55381EF92F820D085785A38A071FD3A96237BD642348B04DE4F787C025769532707863364415069474CF72934E047C04D94288021E78692A55053420853D518491E14A33F3E50D78F303A3F346EFD6AD24644688226516731A416964657A79AF4AE5B193B8839069DE183B0DA23FF9B03B49A5F2278A82F1E974E0F9BF908E6F9D840A9A4E40A5F285D4001FFFFFFFFFFFFFFFF';
$solution2_bin = @hex2bin($solution2);
echo "解决方案2 (使用硬编码字符串): " . (($solution2_bin !== false) ? "有效" : "无效") . "\n";

// 3. 使用文件包含的方式
$temp_file = __DIR__ . '/temp_hex.txt';
file_put_contents($temp_file, 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8887464EDA5FBD55381EF92F820D085785A38A071FD3A96237BD642348B04DE4F787C025769532707863364415069474CF72934E047C04D94288021E78692A55053420853D518491E14A33F3E50D78F303A3F346EFD6AD24644688226516731A416964657A79AF4AE5B193B8839069DE183B0DA23FF9B03B49A5F2278A82F1E974E0F9BF908E6F9D840A9A4E40A5F285D4001FFFFFFFFFFFFFFFF');
$solution3 = file_get_contents($temp_file);
$solution3_bin = @hex2bin($solution3);
echo "解决方案3 (使用文件包含): " . (($solution3_bin !== false) ? "有效" : "无效") . "\n";
unlink($temp_file);

// 4. 使用字符串拼接的方式
$solution4 = '';
$solution
$solution4_bin = @hex2bin($solution4);
echo "解决方案4 (使用字符串拼接): " . (($solution4_bin !== false) ? "有效" : "无效") . "\n";

echo "\n最终结论: " . (($solution1_bin !== false || $solution2_bin !== false || $solution3_bin !== false || $solution4_bin !== false) ? "可以修复" : "需要回退解决方案") . "\n"; 